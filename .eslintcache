[{"/home/ubuntu/Documents/react/client/src/index.js":"1","/home/ubuntu/Documents/react/client/src/reportWebVitals.js":"2","/home/ubuntu/Documents/react/client/src/App.js":"3","/home/ubuntu/Documents/react/client/src/redux/store/store.js":"4","/home/ubuntu/Documents/react/client/src/components/layouts/Header.jsx":"5","/home/ubuntu/Documents/react/client/src/components/layouts/Landing.jsx":"6","/home/ubuntu/Documents/react/client/src/components/layouts/PostList.jsx":"7","/home/ubuntu/Documents/react/client/src/components/layouts/Footer.jsx":"8","/home/ubuntu/Documents/react/client/src/components/auth/Register.jsx":"9","/home/ubuntu/Documents/react/client/src/components/auth/Login.jsx":"10","/home/ubuntu/Documents/react/client/src/redux/actions/authAction.js":"11","/home/ubuntu/Documents/react/client/src/components/layouts/PostItem.jsx":"12","/home/ubuntu/Documents/react/client/src/redux/reducers/index.js":"13","/home/ubuntu/Documents/react/client/src/redux/actions/types.js":"14","/home/ubuntu/Documents/react/client/src/redux/reducers/authReducer.js":"15","/home/ubuntu/Documents/react/client/src/components/layouts/AdminDashboard.jsx":"16","/home/ubuntu/Documents/react/client/src/components/layouts/UserDashboard.jsx":"17","/home/ubuntu/Documents/react/client/src/components/layouts/Product.jsx":"18","/home/ubuntu/Documents/react/client/src/components/auth/AddProduct.jsx":"19","/home/ubuntu/Documents/react/client/src/components/auth/UpdateProduct1.jsx":"20","/home/ubuntu/Documents/react/client/src/components/auth/DeleteProduct.jsx":"21"},{"size":500,"mtime":1607887496869,"results":"22","hashOfConfig":"23"},{"size":362,"mtime":1607887496873,"results":"24","hashOfConfig":"23"},{"size":2134,"mtime":1608062124002,"results":"25","hashOfConfig":"23"},{"size":528,"mtime":1607893494244,"results":"26","hashOfConfig":"23"},{"size":1523,"mtime":1607895266993,"results":"27","hashOfConfig":"23"},{"size":976,"mtime":1607893010106,"results":"28","hashOfConfig":"23"},{"size":0,"mtime":1608070433042,"results":"29","hashOfConfig":"23"},{"size":279,"mtime":1607892940031,"results":"30","hashOfConfig":"23"},{"size":2969,"mtime":1608006030003,"results":"31","hashOfConfig":"23"},{"size":2366,"mtime":1608037741599,"results":"32","hashOfConfig":"23"},{"size":2749,"mtime":1608076324072,"results":"33","hashOfConfig":"23"},{"size":383,"mtime":1608068759040,"results":"34","hashOfConfig":"23"},{"size":139,"mtime":1607893464015,"results":"35","hashOfConfig":"23"},{"size":758,"mtime":1608068103872,"results":"36","hashOfConfig":"23"},{"size":1106,"mtime":1608068045249,"results":"37","hashOfConfig":"23"},{"size":1366,"mtime":1607995590889,"results":"38","hashOfConfig":"23"},{"size":1365,"mtime":1607995647015,"results":"39","hashOfConfig":"23"},{"size":1414,"mtime":1608061979594,"results":"40","hashOfConfig":"23"},{"size":3955,"mtime":1608059758313,"results":"41","hashOfConfig":"23"},{"size":3950,"mtime":1608076534732,"results":"42","hashOfConfig":"23"},{"size":1944,"mtime":1608063648312,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"ad1y9i",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"46"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"46"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"46"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"46"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"46"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"46"},"/home/ubuntu/Documents/react/client/src/index.js",[],["93","94"],"/home/ubuntu/Documents/react/client/src/reportWebVitals.js",[],"/home/ubuntu/Documents/react/client/src/App.js",["95","96","97"],"import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Header from \"./components/layouts/Header\";\nimport Landing from \"./components/layouts/Landing\";\nimport Footer from \"./components/layouts/Footer\";\nimport AdminDashboard from \"./components/layouts/AdminDashboard\";\nimport UserDashboard from \"./components/layouts/UserDashboard\";\nimport Product from \"./components/layouts/Product\";\n\nimport { BrowserRouter as Router, Route} from 'react-router-dom'\nimport Login from \"./components/auth/Login\";\nimport Register from \"./components/auth/Register\";\nimport AddProduct from \"./components/auth/AddProduct\";\nimport UpdateProduct1 from \"./components/auth/UpdateProduct1\";\nimport DeleteProduct from \"./components/auth/DeleteProduct\";\nimport PostList from './components/layouts/PostList'\n\nimport {Provider} from 'react-redux';\nimport store from './redux/store/store'\n\nfunction App() {\n  return (\n    <Provider store={store}>\n    <div className=\"App\">\n      <Router>\n      <Header></Header>\n      <Route exact path = \"/\" component = {Landing}></Route>\n      <Route exact path = \"/login\" component = {Login}></Route>\n      <Route exact path = \"/register\" component = {Register}></Route>\n      <Route exact path = \"/admindashboard\" component = {AdminDashboard}></Route>\n      <Route exact path = \"/userdashboard\" component = {UserDashboard}></Route>\n      <Route exact path = \"/product\" component = {Product}></Route>\n      <Route exact path = \"/addproduct\" component = {AddProduct}></Route>\n      <Route exact path = \"/updateproduct1\" component = {UpdateProduct1}></Route>\n      <Route exact path = \"/deleteproduct\" component = {DeleteProduct}></Route>\n      {/*<Route exact path = \"/sample\" component = {sample}></Route>*/}\n      <Footer></Footer>\n      </Router>\n    </div>\n    </Provider>\n  );\n}\n\nexport default App;\n\n\n\n\n\n\n\n\n\n\n\n\nconst postList = [\n  {\n    id:1,\n    content:'This world is beautiful',\n    user:'Shinchan'\n  },\n  {\n    id:2,\n    content:'Good Morning',\n    user:'Naruto'\n  },\n  {\n    id:3,\n    content:'Have a Nice Day.',\n    user:'Sasuke'\n  },\n  {\n    id:4,\n    content:'I love Anime.. Anime is Life',\n    user:'Kakashi'\n  }\n]","/home/ubuntu/Documents/react/client/src/redux/store/store.js",[],"/home/ubuntu/Documents/react/client/src/components/layouts/Header.jsx",[],"/home/ubuntu/Documents/react/client/src/components/layouts/Landing.jsx",[],"/home/ubuntu/Documents/react/client/src/components/layouts/PostList.jsx",[],"/home/ubuntu/Documents/react/client/src/components/layouts/Footer.jsx",[],"/home/ubuntu/Documents/react/client/src/components/auth/Register.jsx",["98","99","100","101"],"import React, { Component, useState } from 'react'\nimport {Redirect} from 'react-router-dom'\n\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport {registerUser} from '../../redux/actions/authAction'\n const Register = ({registerUser,isAuthenticated}) => {\n  const [formData,setFormData] = useState({username : '',\nemail:'',\npassword:'',\npassword2:''})\nconst {username,email,password,password2} = formData;\nconst onChange=(e) =>{\n\n setFormData({...formData,[e.target.name]:e.target.value})\n  //when state of ur controller is changing then we are holding that changed value in state.\n}\nconst onSubmit =(e)=>{\n  e.preventDefault();\n  const newUser = {\n    username : username,\n    email:email,\n    password:password,\n    role:['user']\n};\n\nconsole.log(JSON.stringify(formData));\nif(password!== password2) {\n  console.log('problem')\n}\nelse{\n  // action \n  console.log('hello from register component'+JSON.stringify(formData))\n  registerUser(formData)\n}\n\n};\n\n  return (\n    <div className=\"register\">\n            <div className=\"container\">\n              <div className=\"row\">\n                <div className=\"col-md-8 m-auto\">\n                  <h1 className=\"display-4 text-center\">Sign Up</h1>\n                  <p className=\"lead text-center\">Create your DevConnector account</p>\n                  <form onSubmit={onSubmit}>\n                    <div className=\"form-group\">\n                      <input type=\"text\" className=\"form-control form-control-lg\" placeholder=\"Name\" name=\"username\" required  value={username} onChange={onChange} />\n                    </div>\n                    <div className=\"form-group\">\n                      <input type=\"email\" className=\"form-control form-control-lg\" placeholder=\"Email Address\" name=\"email\" value={email} onChange={onChange}/>\n                      <small className=\"form-text text-muted\">This site uses Gravatar so if you want a profile image, use a Gravatar email</small>\n                    </div>\n                    <div className=\"form-group\">\n                      <input type=\"password\" className=\"form-control form-control-lg\" placeholder=\"Password\" name=\"password\"  value={password} onChange={onChange}/>\n                    </div>\n                    <div className=\"form-group\">\n                      <input type=\"password\" className=\"form-control form-control-lg\" placeholder=\"Confirm Password\" name=\"password2\" value={password2} onChange={onChange} />\n                    </div>\n                    <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\n                  </form>\n                </div>\n              </div>\n            </div>\n          </div>\n  )\n}\n\nRegister.propTypes = {\n  isAuthenticated: PropTypes.bool.isRequired,\n  registerUser:PropTypes.func.isRequired\n}\n\nconst mapStateToProps = (state) => ({\n  isAuthenticated : state.auth.isAuthenticated\n  \n})\n\nconst mapDispatchToProps = {\n  \n}\n\nexport default connect(mapStateToProps, {registerUser})(Register)","/home/ubuntu/Documents/react/client/src/components/auth/Login.jsx",["102","103","104"],"import React, { Component, useState } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport {login} from '../../redux/actions/authAction'\nimport { Redirect } from 'react-router-dom'\nexport const Login = ({login,isAuthenticated}) => {\n   \n//const [data,settterfunction]= useState({initail data})\nconst [formData,setFormData]= useState({username:'',password:''})\nconst {username,password} = formData;\nconst  handleChange = (event) => {\n setFormData({...formData,[event.target.name]:event.target.value})\n};\n\nconst onSubmit = (e) => {\n  e.preventDefault();\n  console.log(\"Final state: \" + username );\n  console.log(\"password\"+password);\n  const loginUser = {\n    username: username,\n    password: password,\n  };\n \n  login(username,password)\n    \n  //  localStorage.setItem('data',JSON.stringify(response.data))\n   \n};\nif(isAuthenticated){\n  console.log(isAuthenticated)\n  return <Redirect to='/admindashboard'></Redirect>\n}\nreturn (\n  <div className=\"login\">\n  <div className=\"container\">\n    <div className=\"row\">\n      <div className=\"col-md-8 m-auto\">\n        <h1 className=\"display-4 text-center\">Log In</h1>\n        <p className=\"lead text-center\">\n          Sign in to your DevConnector account\n        </p>\n        <form onSubmit={onSubmit}>\n          <div className=\"form-group\">\n            <input\n              type=\"text\"\n              className=\"form-control form-control-lg\"\n              placeholder=\"Username\"\n              name=\"username\"\n              value={username}\n              onChange={handleChange}\n            />\n          </div>\n          <div className=\"form-group\">\n            <input\n              type=\"password\"\n              className=\"form-control form-control-lg\"\n              placeholder=\"Password\"\n              name=\"password\"\n              value={password}\n              onChange={handleChange}\n            />\n          </div>\n          <input\n            type=\"submit\"\n            value=\"Login\"\n            className=\"btn btn-info btn-block mt-4\"\n          />\n        </form>\n      </div>\n    </div>\n  </div>\n</div>\n\n)\n\n}\n\nLogin.propTypes = {\n login:PropTypes.func.isRequired,\n isAuthenticated:PropTypes.bool\n}\n\nconst mapStateToProps = (state) => ({\n\n  isAuthenticated:state.auth.isAuthenticated\n})\n\nconst mapDispatchToProps = {\n  \n}\n\nexport default connect(mapStateToProps, {login})(Login)","/home/ubuntu/Documents/react/client/src/redux/actions/authAction.js",[],"/home/ubuntu/Documents/react/client/src/components/layouts/PostItem.jsx",["105"],"/home/ubuntu/Documents/react/client/src/redux/reducers/index.js",[],"/home/ubuntu/Documents/react/client/src/redux/actions/types.js",[],"/home/ubuntu/Documents/react/client/src/redux/reducers/authReducer.js",["106","107","108","109","110"],"import {LOGIN_SUCCESS, LOGOUT, REGISTER_SUCCESS, ADDPRODUCT_SUCCESS, ADDPRODUCT_FAIL, UPDATEPRODUCT_SUCCESS, UPDATEPRODUCT_FAIL, DELETEPRODUCT_SUCCESS, DELETEPRODUCT_FAIL, FETCHPRODUCTS_SUCCESS, FETCHPRODUCTS_FAIL} from '../actions/types'\nconst initialState = {\ntoken : localStorage.getItem('token'),\nisAuthenticated : false,\nloading : true,\nuser:null\n}\n\nexport default (state = initialState, action) => {\n    const { type, payload } = action;\n    switch (type) {\n\n    case REGISTER_SUCCESS:\n        return { ...state, ...payload,\n        isAuthenticated:false}\n\n    case LOGIN_SUCCESS:\n        return {...state, ...payload,\n        isAuthenticated:true}\n            \n    case LOGOUT:{\n        return {...state, token : null, isAuthenticated:false, user :null}\n            }\n    \n    case ADDPRODUCT_SUCCESS:\n        return { ...state, ...payload}\n\n    case UPDATEPRODUCT_SUCCESS:\n        return { ...state, ...payload}\n\n    case DELETEPRODUCT_SUCCESS:\n        return { ...state, ...payload}\n\n    case FETCHPRODUCTS_SUCCESS:\n        return { ...state, ...payload}\n\n    default:\n        return state\n    }\n}","/home/ubuntu/Documents/react/client/src/components/layouts/AdminDashboard.jsx",[],"/home/ubuntu/Documents/react/client/src/components/layouts/UserDashboard.jsx",[],"/home/ubuntu/Documents/react/client/src/components/layouts/Product.jsx",[],"/home/ubuntu/Documents/react/client/src/components/auth/AddProduct.jsx",["111","112","113","114"],"import React, { Component, useState } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport {addProduct} from '../../redux/actions/authAction'\n\nconst AddProduct = ({ addProduct }) => {\n  const [formData, setFormData] = useState({\n    productid: \"\",\n    productname: \"\",\n    category: \"\",\n    description: \"\",\n    price:\"\",\n    expirydate: \"\",\n  });\n  const {\n    productid,\n    productname,\n    category,\n    description,\n    price,\n    expirydate,\n  } = formData;\n  const onChange = (e) => {\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n    //when state of ur controller is changing then we are holding that changed value in state.\n  };\n  const onSubmit = (e) => {\n    e.preventDefault();\n    const newUser = {\n      productid: productid,\n      productname: productname,\n      category: category,\n      description: description,\n      price: price,\n      expirydate: expirydate\n    };\n\n    console.log(JSON.stringify(formData));\n    addProduct(formData)\n  };\n\n  return (\n    <div className=\"product\">\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-md-8 m-auto\">\n            <h1 className=\"display-4 text-center\">Create Product</h1>\n            <p className=\"lead text-center\">Add Product</p>\n            <form onSubmit={onSubmit}>\n              <div className=\"form-group\">\n                <input\n                  type=\"text\"\n                  className=\"form-control form-control-lg\"\n                  placeholder=\"Product Id\"\n                  name=\"productid\"\n                  required\n                  value={productid}\n                  onChange={onChange}\n                />\n              </div>\n              <div className=\"form-group\">\n                <input\n                  type=\"text\"\n                  className=\"form-control form-control-lg\"\n                  placeholder=\"Product Name\"\n                  name=\"productname\"\n                  value={productname}\n                  onChange={onChange}\n                />\n              </div>\n              <div className=\"form-group\">\n                <input\n                  type=\"text\"\n                  className=\"form-control form-control-lg\"\n                  placeholder=\"Category\"\n                  name=\"category\"\n                  value={category}\n                  onChange={onChange}\n                />\n              </div>\n              <div className=\"form-group\">\n                <input\n                  type=\"text\"\n                  className=\"form-control form-control-lg\"\n                  placeholder=\"Description\"\n                  name=\"description\"\n                  value={description}\n                  onChange={onChange}\n                />\n              </div>\n              <div className=\"form-group\">\n                <input\n                  type=\"text\"\n                  className=\"form-control form-control-lg\"\n                  placeholder=\"Price\"\n                  name=\"price\"\n                  value={price}\n                  onChange={onChange}\n                />\n              </div>\n              <div className=\"form-group\">\n                <input\n                  type=\"date\"\n                  className=\"form-control form-control-lg\"\n                  placeholder=\"Expiry Date\"\n                  name=\"expirydate\"\n                  value={expirydate}\n                  onChange={onChange}\n                />\n              </div>\n              <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nAddProduct.propTypes = {\n  //isAuthenticated: PropTypes.bool,\n  addProduct: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  //isAuthenticated: state.auth.isAuthenticated,\n});\n\nconst mapDispatchToProps = {};\n\nexport default connect(mapStateToProps, { addProduct })(AddProduct);\n","/home/ubuntu/Documents/react/client/src/components/auth/UpdateProduct1.jsx",["115","116","117","118"],"/home/ubuntu/Documents/react/client/src/components/auth/DeleteProduct.jsx",["119","120","121","122"],"import React, { Component, useState } from \"react\";\nimport { Redirect } from \"react-router-dom\";\n\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { deleteProduct } from \"../../redux/actions/authAction\";\nconst DeleteProduct = ({ deleteProduct }) => {\n  const [formData, setFormData] = useState({ productid: \"\" });\n  const { productid } = formData;\n  const onChange = (e) => {\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n    //when state of ur controller is changing then we are holding that changed value in state.\n  };\n  const onSubmit = (e) => {\n    e.preventDefault();\n    const newUser = {\n      productid: productid,\n    };\n\n    console.log(JSON.stringify(formData));\n    deleteProduct(formData)\n  };\n\n  return (\n    <div className=\"product\">\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-md-8 m-auto\">\n            <h1 className=\"display-4 text-center\">Delete Product</h1>\n            <p className=\"lead text-center\">Delete Product</p>\n            <form onSubmit={onSubmit}>\n              <div className=\"form-group\">\n                <input\n                  type=\"text\"\n                  className=\"form-control form-control-lg\"\n                  placeholder=\"Product Id\"\n                  name=\"productid\"\n                  required\n                  value={productid}\n                  onChange={onChange}\n                />\n              </div>\n              <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nDeleteProduct.propTypes = {\n  //isAuthenticated: PropTypes.bool.isRequired,\n  deleteProduct: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  //isAuthenticated: state.auth.isAuthenticated,\n});\n\nconst mapDispatchToProps = {};\n\nexport default connect(mapStateToProps, { deleteProduct })(DeleteProduct);\n",{"ruleId":"123","replacedBy":"124"},{"ruleId":"125","replacedBy":"126"},{"ruleId":"127","severity":1,"message":"128","line":1,"column":8,"nodeType":"129","messageId":"130","endLine":1,"endColumn":12},{"ruleId":"127","severity":1,"message":"131","line":16,"column":8,"nodeType":"129","messageId":"130","endLine":16,"endColumn":16},{"ruleId":"127","severity":1,"message":"132","line":57,"column":7,"nodeType":"129","messageId":"130","endLine":57,"endColumn":15},{"ruleId":"127","severity":1,"message":"133","line":1,"column":17,"nodeType":"129","messageId":"130","endLine":1,"endColumn":26},{"ruleId":"127","severity":1,"message":"134","line":2,"column":9,"nodeType":"129","messageId":"130","endLine":2,"endColumn":17},{"ruleId":"127","severity":1,"message":"135","line":20,"column":9,"nodeType":"129","messageId":"130","endLine":20,"endColumn":16},{"ruleId":"127","severity":1,"message":"136","line":79,"column":7,"nodeType":"129","messageId":"130","endLine":79,"endColumn":25},{"ruleId":"127","severity":1,"message":"133","line":1,"column":17,"nodeType":"129","messageId":"130","endLine":1,"endColumn":26},{"ruleId":"127","severity":1,"message":"137","line":19,"column":9,"nodeType":"129","messageId":"130","endLine":19,"endColumn":18},{"ruleId":"127","severity":1,"message":"136","line":88,"column":7,"nodeType":"129","messageId":"130","endLine":88,"endColumn":25},{"ruleId":"127","severity":1,"message":"138","line":2,"column":10,"nodeType":"129","messageId":"130","endLine":2,"endColumn":14},{"ruleId":"127","severity":1,"message":"139","line":1,"column":70,"nodeType":"129","messageId":"130","endLine":1,"endColumn":85},{"ruleId":"127","severity":1,"message":"140","line":1,"column":110,"nodeType":"129","messageId":"130","endLine":1,"endColumn":128},{"ruleId":"127","severity":1,"message":"141","line":1,"column":153,"nodeType":"129","messageId":"130","endLine":1,"endColumn":171},{"ruleId":"127","severity":1,"message":"142","line":1,"column":196,"nodeType":"129","messageId":"130","endLine":1,"endColumn":214},{"ruleId":"143","severity":1,"message":"144","line":9,"column":1,"nodeType":"145","endLine":40,"endColumn":2},{"ruleId":"127","severity":1,"message":"133","line":1,"column":17,"nodeType":"129","messageId":"130","endLine":1,"endColumn":26},{"ruleId":"127","severity":1,"message":"134","line":2,"column":10,"nodeType":"129","messageId":"130","endLine":2,"endColumn":18},{"ruleId":"127","severity":1,"message":"135","line":30,"column":11,"nodeType":"129","messageId":"130","endLine":30,"endColumn":18},{"ruleId":"127","severity":1,"message":"136","line":130,"column":7,"nodeType":"129","messageId":"130","endLine":130,"endColumn":25},{"ruleId":"127","severity":1,"message":"133","line":1,"column":17,"nodeType":"129","messageId":"130","endLine":1,"endColumn":26},{"ruleId":"127","severity":1,"message":"134","line":2,"column":10,"nodeType":"129","messageId":"130","endLine":2,"endColumn":18},{"ruleId":"127","severity":1,"message":"135","line":23,"column":11,"nodeType":"129","messageId":"130","endLine":23,"endColumn":18},{"ruleId":"127","severity":1,"message":"136","line":122,"column":7,"nodeType":"129","messageId":"130","endLine":122,"endColumn":25},{"ruleId":"127","severity":1,"message":"133","line":1,"column":17,"nodeType":"129","messageId":"130","endLine":1,"endColumn":26},{"ruleId":"127","severity":1,"message":"134","line":2,"column":10,"nodeType":"129","messageId":"130","endLine":2,"endColumn":18},{"ruleId":"127","severity":1,"message":"135","line":16,"column":11,"nodeType":"129","messageId":"130","endLine":16,"endColumn":18},{"ruleId":"127","severity":1,"message":"136","line":61,"column":7,"nodeType":"129","messageId":"130","endLine":61,"endColumn":25},"no-native-reassign",["146"],"no-negated-in-lhs",["147"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'PostList' is defined but never used.","'postList' is assigned a value but never used.","'Component' is defined but never used.","'Redirect' is defined but never used.","'newUser' is assigned a value but never used.","'mapDispatchToProps' is assigned a value but never used.","'loginUser' is assigned a value but never used.","'Link' is defined but never used.","'ADDPRODUCT_FAIL' is defined but never used.","'UPDATEPRODUCT_FAIL' is defined but never used.","'DELETEPRODUCT_FAIL' is defined but never used.","'FETCHPRODUCTS_FAIL' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation"]